<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Tianqi Li</title>
    <link>https://litianqi.github.io/posts/</link>
    <description>Recent content in Posts on Tianqi Li</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 12 Nov 2019 19:54:01 +0800</lastBuildDate>
    
	<atom:link href="https://litianqi.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Returning to Player Camera after Level Sequence Play</title>
      <link>https://litianqi.github.io/2019/11/12/returning-to-player-camera-after-level-sequence-play/</link>
      <pubDate>Tue, 12 Nov 2019 19:54:01 +0800</pubDate>
      
      <guid>https://litianqi.github.io/2019/11/12/returning-to-player-camera-after-level-sequence-play/</guid>
      <description>If you want to transit camera back to player seamlessly after or during level sequence, you can call SetViewTargetWithBlend to do that, with a player as new target. Just make sure you put the following settings right:
 Tracks of camera cuts and camera actor are set to keep state when finished, otherwise camera will roll back to initial state.
 If you are switching camera in level sequence (not after), make sure to crop length of camera cuts so that it ends earlier than SetViewTargetWithBlend.</description>
    </item>
    
    <item>
      <title>UE4 Learning Resources</title>
      <link>https://litianqi.github.io/2019/11/04/ue4-learning-resources/</link>
      <pubDate>Mon, 04 Nov 2019 23:44:26 +0800</pubDate>
      
      <guid>https://litianqi.github.io/2019/11/04/ue4-learning-resources/</guid>
      <description> A collection of UE4 learning resources.
Garbage Collection  Garbage Collection Overview - Epic Wiki Garbage Collection &amp;amp; Dynamic Memory Allocation - Epic Wiki  Reflection  Unreal Property System (Reflection) - Epic Blog  Collision  Collision Filtering - Epic Blog  Replication  Replication - Epic Wiki A Crash Course in Blueprint Replication - Epic Blog Sequence Diagram of Networking inside the Character Movement Component class Authoritative Networked Character Movement Network Tips and Tricks - Epic Blog  Gameplay Ability System  Repo to gather all Gameplay Ability System content for UE4  UMG  UMG Best Practices - Epic Blog  Misc  Actor Lifecycle - Epic Documentation Logs, Printing Messages To Yourself During Runtime - Epic Wiki  </description>
    </item>
    
    <item>
      <title>Rendering Workflow of Slate</title>
      <link>https://litianqi.github.io/2019/11/01/rendering-workflow-of-slate/</link>
      <pubDate>Fri, 01 Nov 2019 10:42:13 +0800</pubDate>
      
      <guid>https://litianqi.github.io/2019/11/01/rendering-workflow-of-slate/</guid>
      <description>The rendering of Slate happens in FSlateApplication::PrivateDrawWindows. It first iterates every visible window to collect nessary rendering information used for rendering. Then consumes these information by invoking corresponding platform&amp;rsquo;s graphics API (D3D, OpenGL, etc.) to do the rendering job.
Collecting A window (SWindow) in UE4&amp;rsquo;s terminology is the top-level widget of game, usually one game has only one window, every widget we created at runtime is just a child of it.</description>
    </item>
    
  </channel>
</rss>